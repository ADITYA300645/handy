%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2419 554
%%HiResBoundingBox: 0 0 2418.96 553.91998
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2418.96 553.91998 re
W
q
[0.24 0 0 -0.24 0 553.91998] cm
q
0 0 10079.167 2306.4885 re
W*
q
[-35.144634 0 0 35.159126 3761.4819 -34080.559] cm
/DeviceRGB {} CS
[0.5922 0.2235 0.3804] SC
/DeviceRGB {} cs
[0.5922 0.2235 0.3804] sc
7.000009 1016.36218 m
23.00001 1015.36218 l
23.00001 1012.31311 25.00001 1007.36218 25.00001 1007.36218 c
25.00001 1007.36218 27.540909 1007.36218 30.00001 1007.36218 c
32.000008 1003.36218 35.000008 995.36218 37.000008 995.36218 c
37.000008 995.36218 38.000008 991.36218 40.000008 991.36218 c
42.631409 991.36218 56.999989 1000.36218 56.999989 1000.36218 c
46.000008 1016.36218 l
46.000008 1016.36218 51.417389 1013.5271 56.999989 1012.36218 c
58.987988 1011.94739 56.765587 1007.6557 58.999989 1007.36218 c
60.928989 1007.10876 62.999989 1006.36218 63.999989 1006.36218 c
64.999985 1006.36218 66.032387 993.11346 67.999985 995.36218 c
74.999985 1003.36218 89.404686 1012.64301 92.999985 1016.36218 c
80.999985 999.36218 l
77.999985 1003.36218 l
68.999985 990.36218 l
57.999985 997.36218 l
47.000004 989.36218 l
44.000004 991.36218 l
39.000004 988.36218 l
35.000004 994.36218 l
30.000004 992.36218 l
18.000004 1008.36218 l
14.625104 1007.73706 l
7.000004 1016.36218 l
f
Q
q
[40.761066 0 0 40.777882 4046.1943 -195.4561] cm
/DeviceRGB {} CS
[0.3843 0.2039 0.2824] SC
/DeviceRGB {} cs
[0.3843 0.2039 0.2824] sc
28.268999 38.818001 m
28.6206 38.818001 28.873758 39.070339 28.873758 39.393162 c
28.873758 39.744762 28.620169 39.998363 28.268559 39.998363 c
18.654959 39.998363 l
18.303358 39.998363 18.049358 39.744774 18.049358 39.393162 c
18.049358 39.070351 18.303339 38.816761 18.654959 38.816761 c
19.380539 38.816761 l
20.114939 38.816761 20.64934 38.292362 20.64934 37.684361 c
20.64934 26.731361 l
9.18534 26.731361 l
9.18534 37.673363 l
9.18534 38.278564 9.71374 38.817764 10.45374 38.817764 c
11.17932 38.817764 l
11.53092 38.817764 11.784921 39.071354 11.784921 39.394165 c
11.784921 39.745766 11.530941 39.999367 11.17932 39.999367 c
1.565721 39.999367 l
1.214121 39.999367 0.960521 39.745777 0.960521 39.394165 c
0.960521 39.071354 1.214111 38.817764 1.565721 38.817764 c
2.291301 38.817764 l
3.025701 38.817764 3.560101 38.293365 3.560101 37.685364 c
3.554515 15.966364 l
3.554515 15.355564 3.026115 14.822364 2.286115 14.822364 c
1.560535 14.822364 l
1.208935 14.822364 0.954935 14.568384 0.954935 14.245564 c
0.954935 13.893964 1.208915 13.640364 1.560535 13.640364 c
11.174134 13.640364 l
11.525734 13.640364 11.779735 13.893953 11.779735 14.245564 c
11.779735 14.568374 11.525755 14.822364 11.174134 14.822364 c
10.448554 14.822364 l
9.714154 14.822364 9.179754 15.355564 9.179754 15.954763 c
9.179754 25.550364 l
20.643753 25.550364 l
20.643753 15.966364 l
20.643753 15.355564 20.115353 14.822364 19.375353 14.822364 c
18.649773 14.822364 l
18.298172 14.822364 18.044172 14.568384 18.044172 14.245564 c
18.044172 13.893964 18.298153 13.640364 18.649773 13.640364 c
28.263372 13.640364 l
28.614973 13.640364 28.868572 13.893953 28.868572 14.245564 c
28.868572 14.568374 28.614983 14.822364 28.263372 14.822364 c
27.537792 14.822364 l
26.803392 14.822364 26.268991 15.355564 26.268991 15.954763 c
26.275007 37.673763 l
26.275007 38.278965 26.803408 38.818165 27.543407 38.818165 c
28.268988 38.818165 l
28.268999 38.818001 l
h
57.603001 38.818001 m
57.925812 38.818001 58.208599 39.07159 58.208599 39.423203 c
58.208599 39.746014 57.925789 39.999603 57.602959 39.999603 c
46.278957 39.999603 l
45.956146 39.999603 45.673317 39.746014 45.673317 39.423203 c
45.673317 39.071602 45.956127 38.818001 46.278957 38.818001 c
47.718956 38.818001 l
48.533356 38.818001 49.010956 38.197601 48.678997 37.417999 c
46.405796 31.975199 l
36.974995 31.975199 l
34.783794 37.417999 l
34.503796 38.149601 34.946606 38.818001 35.743793 38.818001 c
37.183792 38.818001 l
37.506603 38.818001 37.789433 39.07159 37.789433 39.423203 c
37.789433 39.746014 37.506622 39.999603 37.183792 39.999603 c
30.558992 39.999603 l
30.236183 39.999603 29.953352 39.746014 29.953352 39.423203 c
29.953352 39.071602 30.236162 38.818001 30.558992 38.818001 c
31.518993 38.818001 l
32.558994 38.818001 33.009792 38.298 33.358994 37.417999 c
43.088593 13.432999 l
44.734192 13.432999 l
54.763191 37.458 l
55.07198 38.178001 55.603191 38.818001 56.72319 38.818001 c
57.603191 38.818001 l
57.603001 38.818001 l
h
37.450401 30.822001 m
45.912003 30.822001 l
41.607601 20.498001 l
37.450401 30.822001 l
h
83.209999 13.64 m
83.5616 13.64 83.815521 13.89367 83.815521 14.21648 c
83.815521 14.56808 83.561539 14.822081 83.209923 14.822081 c
82.484344 14.822081 l
81.703545 14.822081 81.209946 15.424881 81.209946 16.06768 c
81.209946 39.99968 l
78.467949 39.99968 l
63.293949 19.42568 l
63.293949 37.572678 l
63.293949 38.215477 63.787949 38.818279 64.568748 38.818279 c
65.294327 38.818279 l
65.645927 38.818279 65.899925 39.071869 65.899925 39.423481 c
65.899925 39.746292 65.645943 39.999882 65.294327 39.999882 c
59.880325 39.999882 l
59.528725 39.999882 59.274727 39.746292 59.274727 39.423481 c
59.274727 39.07188 59.528706 38.818279 59.880325 38.818279 c
60.605904 38.818279 l
61.386703 38.818279 61.880703 38.215481 61.880703 37.572678 c
61.880703 16.067679 l
61.880703 15.424878 61.386703 14.822079 60.605904 14.822079 c
59.880325 14.822079 l
59.528725 14.822079 59.274727 14.568099 59.274727 14.216478 c
59.274727 13.893668 59.528706 13.640078 59.880325 13.640078 c
65.545128 13.640078 l
79.796127 32.894077 l
79.796127 16.068077 l
79.796127 15.425277 79.302528 14.822477 78.521729 14.822477 c
77.79615 14.822477 l
77.44455 14.822477 77.190948 14.568498 77.190948 14.216877 c
77.190948 13.894067 77.444542 13.640477 77.79615 13.640477 c
83.209747 13.640477 l
83.209999 13.64 l
h
96.708 13.64 m
106.076401 13.64 112.313004 16.9596 112.313004 26.639999 c
112.313004 34.239998 106.795807 40 96.707001 40 c
86.324997 40 l
85.973396 40 85.719795 39.74641 85.719795 39.394798 c
85.719795 39.071987 85.973389 38.818398 86.324997 38.818398 c
87.050575 38.818398 l
87.784973 38.818398 88.319374 38.285198 88.319374 37.685997 c
88.313789 15.966997 l
88.313789 15.361797 87.785393 14.822598 87.045387 14.822598 c
86.319809 14.822598 l
85.968208 14.822598 85.714211 14.568618 85.714211 14.245797 c
85.714211 13.894198 85.968193 13.640597 86.319809 13.640597 c
96.707809 13.640597 l
96.708 13.64 l
h
96.707001 38.8176 m
102.007797 38.8176 106.149803 34.919601 106.149803 26.639599 c
106.149803 18.279598 102.4478 14.821599 96.707001 14.821599 c
95.207397 14.821599 l
94.473 14.821599 93.938599 15.354799 93.938599 15.953999 c
93.944611 37.672997 l
93.944611 38.278198 94.473007 38.817398 95.213013 38.817398 c
96.707016 38.817398 l
96.707001 38.8176 l
h
138.792007 13.64 m
139.114822 13.64 139.368484 13.89398 139.368484 14.216801 c
139.368484 14.5684 139.114899 14.822401 138.792084 14.822401 c
138.08606 14.822401 l
137.323257 14.822401 136.564453 15.305202 136.208466 15.981201 c
129.762863 28.081202 l
129.762863 37.5728 l
129.762863 38.215599 130.256866 38.818401 131.037659 38.818401 c
131.763245 38.818401 l
132.114838 38.818401 132.368851 39.071991 132.368851 39.394802 c
132.368851 39.746403 132.114868 40.000004 131.763245 40.000004 c
122.144043 40.000004 l
121.792442 40.000004 121.538445 39.746414 121.538445 39.394802 c
121.538445 39.071991 121.792427 38.818401 122.144043 38.818401 c
122.869621 38.818401 l
123.650421 38.818401 124.144424 38.215603 124.144424 37.5728 c
124.144424 29.365999 l
116.875626 15.980999 l
116.519608 15.338199 116.141586 14.822199 115.301628 14.822199 c
114.661629 14.822199 l
114.310028 14.822199 114.05603 14.568219 114.05603 14.216599 c
114.05603 13.893788 114.310013 13.640199 114.661629 13.640199 c
124.741631 13.640199 l
125.064438 13.640199 125.318428 13.893788 125.318428 14.216599 c
125.318428 14.568198 125.064445 14.822199 124.741631 14.822199 c
124.080849 14.822199 l
123.182449 14.822199 122.827248 15.256199 123.224052 15.980598 c
128.970047 26.748598 l
134.628052 15.980598 l
134.946838 15.406598 134.563248 14.821798 133.756454 14.821798 c
133.172867 14.821798 l
132.821274 14.821798 132.567261 14.567819 132.567261 14.216198 c
132.567261 13.893388 132.821243 13.639798 133.172867 13.639798 c
138.792068 13.639798 l
138.792007 13.64 l
h
f
Q
q
[6.972796 0 0 6.975671 4076.4021 1790.1637] cm
/DeviceRGB {} CS
[0.3843 0.2039 0.2824] SC
/DeviceRGB {} cs
[0.3843 0.2039 0.2824] sc
6.45 18.25 m
7.51 18.25 8.37 17.809999 8.95 17.07 c
9.07 16.92 9.19 16.889999 9.349999 16.99 c
10.499999 17.66 l
10.659999 17.76 10.719999 17.9 10.599999 18.059999 c
9.74 19.379999 8.219999 20.26 6.409999 20.26 c
3.429999 20.26 1.25 18.030001 1.25 15.120001 c
1.25 12.210001 3.43 9.980001 6.409999 9.980001 c
8.219999 9.980001 9.74 10.860002 10.599999 12.180001 c
10.719999 12.340001 10.66 12.480001 10.499999 12.580001 c
9.349999 13.250001 l
9.19 13.350001 9.07 13.320001 8.95 13.170001 c
8.37 12.430001 7.51 11.980001 6.45 11.980001 c
4.67 11.980001 3.35 13.260001 3.35 15.120002 c
3.35 16.980003 4.67 18.250002 6.45 18.250002 c
6.45 18.25 l
h
47.16 20.26 m
44.310001 20.26 42.009998 18 42.009998 15.120001 c
42.009998 12.250001 44.309998 9.980001 47.16 9.980001 c
50 9.980001 52.299999 12.250002 52.299999 15.120001 c
52.299999 18 50 20.26 47.16 20.26 c
h
47.16 18.25 m
48.880001 18.25 50.209999 16.85 50.209999 15.12 c
50.209999 13.4 48.879997 11.98 47.16 11.98 c
45.43 11.98 44.099998 13.4 44.099998 15.12 c
44.099998 16.85 45.43 18.25 47.16 18.25 c
h
89.760002 9.98 m
91.849998 9.98 93.300003 11.4 93.300003 14.02 c
93.300003 19.699999 l
93.300003 19.879999 93.18 19.999998 93 19.999998 c
91.440002 19.999998 l
91.260002 19.999998 91.139999 19.879997 91.139999 19.699999 c
91.139999 14.339998 l
91.139999 12.669998 90.279999 11.969998 88.970001 11.969998 c
87.07 11.969998 86.25 13.609999 86.25 14.049998 c
86.25 19.699999 l
86.25 19.879999 86.129997 19.999998 85.949997 19.999998 c
84.389999 19.999998 l
84.209999 19.999998 84.089996 19.879997 84.089996 19.699999 c
84.089996 10.499999 l
84.089996 10.319999 84.209999 10.199999 84.389999 10.199999 c
85.870003 10.199999 l
86.050003 10.199999 86.150002 10.319999 86.170006 10.499999 c
86.250008 11.819999 l
86.460007 11.819999 l
87.040009 10.879999 88.110008 9.979999 89.76001 9.979999 c
89.760002 9.98 l
h
131.110001 9.98 m
133.199997 9.98 134.649994 11.4 134.649994 14.02 c
134.649994 19.699999 l
134.649994 19.879999 134.529999 19.999998 134.349991 19.999998 c
132.789993 19.999998 l
132.610001 19.999998 132.48999 19.879997 132.48999 19.699999 c
132.48999 14.339998 l
132.48999 12.669998 131.62999 11.969998 130.319992 11.969998 c
128.419998 11.969998 127.599991 13.609999 127.599991 14.049998 c
127.599991 19.699999 l
127.599991 19.879999 127.479988 19.999998 127.299988 19.999998 c
125.73999 19.999998 l
125.55999 19.999998 125.439987 19.879997 125.439987 19.699999 c
125.439987 10.499999 l
125.439987 10.319999 125.55999 10.199999 125.73999 10.199999 c
127.219994 10.199999 l
127.399994 10.199999 127.499992 10.319999 127.519997 10.499999 c
127.599998 11.819999 l
127.809998 11.819999 l
128.389999 10.879999 129.459991 9.979999 131.110001 9.979999 c
131.110001 9.98 l
h
171.44 9.98 m
174.40001 9.98 176.18001 12.25 176.18001 14.869999 c
176.18001 15.609999 176.09001 15.979999 175.53001 15.979999 c
168.54001 15.979999 l
168.77 17.499998 170.04001 18.48 171.85001 18.48 c
172.90001 18.48 173.63 18.16 174.3 17.65 c
174.46001 17.529999 174.58 17.5 174.73 17.65 c
175.39 18.309999 l
175.53999 18.459999 175.55 18.6 175.39 18.76 c
174.44 19.710001 173.2 20.26 171.63 20.26 c
168.51001 20.26 166.440002 18 166.440002 15.120001 c
166.440002 12.240002 168.51001 9.980001 171.44 9.980001 c
171.44 9.98 l
h
171.45 11.83 m
169.92 11.83 168.78 12.83 168.56 14.42 c
174.28 14.42 l
174.12 12.85 173.00999 11.83 171.45 11.83 c
h
212.82001 18.25 m
213.88 18.25 214.74001 17.809999 215.32001 17.07 c
215.44 16.92 215.56001 16.889999 215.72 16.99 c
216.87 17.66 l
217.03 17.76 217.09 17.9 216.97 18.059999 c
216.11 19.379999 214.59 20.26 212.78 20.26 c
209.8 20.26 207.62 18.030001 207.62 15.120001 c
207.62 12.210001 209.79999 9.980001 212.78 9.980001 c
214.59 9.980001 216.11 10.860002 216.97 12.180001 c
217.09 12.340001 217.03 12.480001 216.87 12.580001 c
215.72 13.250001 l
215.56 13.350001 215.44 13.320001 215.32001 13.170001 c
214.74001 12.430001 213.88 11.980001 212.82001 11.980001 c
211.04001 11.980001 209.72 13.260001 209.72 15.120002 c
209.72 16.980003 211.04001 18.250002 212.82001 18.250002 c
212.82001 18.25 l
h
258.12 18.35 m
258.22998 18.48 258.25 18.630001 258.13998 18.76 c
257.71997 19.280001 256.62997 20.16 254.83998 20.16 c
252.78998 20.16 250.85999 19.4 250.85999 16.190001 c
250.85999 12.01 l
248.37999 12.01 l
248.2 12.01 248.07999 11.89 248.07999 11.71 c
248.07999 10.5 l
248.07999 10.32 248.19998 10.2 248.37999 10.2 c
250.85999 10.2 l
250.85999 7.6 l
250.85999 7.42 250.97998 7.3 251.15999 7.3 c
252.71999 7.3 l
252.89998 7.3 253.01999 7.42 253.01999 7.6 c
253.01999 10.2 l
256.97 10.2 l
257.14999 10.2 257.26999 10.32 257.26999 10.5 c
257.26999 11.71 l
257.26999 11.89 257.14999 12.01 256.97 12.01 c
253.02 12.01 l
253.02 15.96 l
253.02 17.83 254.10001 18.219999 255.21001 18.219999 c
256.04001 18.219999 256.64001 17.859999 257.03 17.549999 c
257.17001 17.42 257.32999 17.429998 257.45001 17.57 c
258.12 18.35 l
h
335.87 10.2 m
336.04999 10.2 336.16998 10.32 336.16998 10.5 c
336.16998 19.85 l
336.16998 22.940001 333.44998 23.960001 331.09998 23.960001 c
329.49997 23.960001 328.05997 23.51 327.08997 22.860001 c
326.93997 22.76 326.91995 22.610001 326.99997 22.450001 c
327.49997 21.52 l
327.58997 21.360001 327.72998 21.310001 327.89996 21.4 c
328.75995 21.859999 329.67996 22.129999 330.93997 22.129999 c
332.41998 22.129999 334.13998 21.559999 334.13998 19.759998 c
334.13998 18.469997 l
333.39999 19.399998 332.32999 20.049997 330.91998 20.049997 c
328.14999 20.049997 326.14999 17.779997 326.14999 15.019997 c
326.14999 12.259996 328.14999 9.989996 330.91998 9.989996 c
332.26999 9.989996 333.34998 10.619996 334.09998 11.539996 c
334.15997 10.499996 l
334.17996 10.319996 334.27997 10.199996 334.45996 10.199996 c
335.86996 10.199996 l
335.87 10.2 l
h
331.14999 18.07 m
332.82001 18.07 334.04001 16.619999 334.04001 15 c
334.04001 13.4 332.82001 11.97 331.14999 11.97 c
329.47998 11.97 328.23999 13.31 328.23999 15 c
328.23999 16.709999 329.47998 18.07 331.14999 18.07 c
h
374.12 9.98 m
376.28 9.98 377.87 11.299999 377.87 13.789999 c
377.87 13.979999 377.76999 14.089999 377.57999 14.109999 c
376.01999 14.329999 l
375.82999 14.359999 375.72 14.249999 375.69998 14.059999 c
375.60999 12.599999 374.70999 11.989999 373.42999 11.989999 c
371.41 11.989999 370.47 13.679998 370.47 14.279999 c
370.47 19.699999 l
370.47 19.879999 370.35001 19.999998 370.17001 19.999998 c
368.61002 19.999998 l
368.43002 19.999998 368.31003 19.879997 368.31003 19.699999 c
368.31003 10.499999 l
368.31003 10.319999 368.43002 10.199999 368.61002 10.199999 c
370.09003 10.199999 l
370.27002 10.199999 370.37003 10.319999 370.39001 10.499999 c
370.47 11.819999 l
370.69 11.819999 l
371.33002 10.879999 372.51999 9.979999 374.12 9.979999 c
374.12 9.98 l
h
414.35999 20.26 m
411.50998 20.26 409.20999 18 409.20999 15.120001 c
409.20999 12.250001 411.50998 9.980001 414.35999 9.980001 c
417.19998 9.980001 419.5 12.250002 419.5 15.120001 c
419.5 18 417.20001 20.26 414.35999 20.26 c
h
414.35999 18.25 m
416.07999 18.25 417.40997 16.85 417.40997 15.12 c
417.40997 13.4 416.07999 11.98 414.35999 11.98 c
412.62997 11.98 411.29999 13.4 411.29999 15.12 c
411.29999 16.85 412.62997 18.25 414.35999 18.25 c
h
463.85001 10.2 m
464.07001 10.2 464.14001 10.32 464.09 10.54 c
461.67999 19.76 l
461.63998 19.92 461.47998 20 461.32001 20 c
459.47 20 l
459.31 20 459.16 19.92 459.11002 19.76 c
457.33002 12.75 l
455.53003 19.76 l
455.49002 19.92 455.33002 20 455.17004 20 c
453.32004 20 l
453.16003 20 453.01004 19.92 452.96005 19.76 c
450.57004 10.54 l
450.51004 10.32 450.59003 10.2 450.81003 10.2 c
452.26004 10.2 l
452.42004 10.2 452.58005 10.28 452.62003 10.44 c
454.30002 17.529999 l
456.20001 10.439999 l
456.25 10.279999 456.40002 10.199999 456.56 10.199999 c
458.07999 10.199999 l
458.23999 10.199999 458.39999 10.279999 458.43997 10.439999 c
460.34998 17.529999 l
462.03998 10.439999 l
462.06998 10.279999 462.22998 10.199999 462.39996 10.199999 c
463.84998 10.199999 l
463.85001 10.2 l
h
536.32001 14.3 m
538.42999 14.570001 540.88 14.83 540.88 17.24 c
540.88 19.029999 539.40002 20.26 536.37 20.26 c
533.75 20.26 531.97998 19.49 531.75 17.16 c
531.72998 16.959999 531.85999 16.860001 532.03998 16.860001 c
533.52997 16.860001 l
533.70996 16.860001 533.79999 16.940001 533.81995 17.08 c
533.96997 18.09 534.90997 18.459999 536.32996 18.459999 c
537.86993 18.459999 538.75995 18.059999 538.75995 17.199999 c
538.75995 16.289999 537.71997 16.07 536.31995 15.899999 c
534.23993 15.629998 531.93994 15.349999 531.93994 12.979999 c
531.93994 11.209999 533.31995 9.979999 536.16992 9.979999 c
538.6499 9.979999 540.43994 10.739999 540.66992 13.069999 c
540.68994 13.269999 540.55994 13.369999 540.37994 13.369999 c
538.88995 13.369999 l
538.70996 13.369999 538.61993 13.289999 538.59998 13.149999 c
538.44995 12.139998 537.48999 11.769999 536.19995 11.769999 c
534.86993 11.769999 534.04993 12.149999 534.04993 13.019999 c
534.04993 13.889998 534.92993 14.119999 536.31995 14.299998 c
536.32001 14.3 l
h
581.38 10.2 m
581.56 10.2 581.67999 10.32 581.67999 10.5 c
581.67999 19.700001 l
581.67999 19.880001 581.56 20 581.38 20 c
579.90002 20 l
579.72003 20 579.62 19.879999 579.60004 19.700001 c
579.52002 18.370001 l
579.32001 18.370001 l
578.71002 19.320002 577.65002 20.220001 576.04999 20.220001 c
573.95001 20.220001 572.46997 18.800001 572.46997 16.18 c
572.46997 10.5 l
572.46997 10.32 572.58997 10.2 572.76996 10.2 c
574.32996 10.2 l
574.50995 10.2 574.62994 10.32 574.62994 10.5 c
574.62994 15.860001 l
574.62994 17.530001 575.50995 18.240002 576.91992 18.240002 c
578.67993 18.240002 579.5199 16.590002 579.5199 16.150002 c
579.5199 10.500002 l
579.5199 10.320002 579.63989 10.200002 579.81989 10.200002 c
581.37988 10.200002 l
581.38 10.2 l
h
618.66998 18.25 m
619.72998 18.25 620.58997 17.809999 621.16998 17.07 c
621.28998 16.92 621.40997 16.889999 621.57001 16.99 c
622.72003 17.66 l
622.88 17.76 622.94 17.9 622.82001 18.059999 c
621.96002 19.379999 620.44 20.26 618.63 20.26 c
615.65002 20.26 613.47003 18.030001 613.47003 15.120001 c
613.47003 12.210001 615.65002 9.980001 618.63 9.980001 c
620.44 9.980001 621.96002 10.860002 622.82001 12.180001 c
622.94 12.340001 622.88 12.480001 622.72003 12.580001 c
621.57001 13.250001 l
621.41003 13.350001 621.28998 13.320001 621.16998 13.170001 c
620.58997 12.430001 619.72998 11.980001 618.66998 11.980001 c
616.88995 11.980001 615.57001 13.260001 615.57001 15.120002 c
615.57001 16.980003 616.89001 18.250002 618.66998 18.250002 c
618.66998 18.25 l
h
659.42999 18.25 m
660.48999 18.25 661.34998 17.809999 661.92999 17.07 c
662.04999 16.92 662.16998 16.889999 662.33002 16.99 c
663.48004 17.66 l
663.64001 17.76 663.70001 17.9 663.58002 18.059999 c
662.72003 19.379999 661.20001 20.26 659.39001 20.26 c
656.41003 20.26 654.23004 18.030001 654.23004 15.120001 c
654.23004 12.210001 656.41003 9.980001 659.39001 9.980001 c
661.20001 9.980001 662.72003 10.860002 663.58002 12.180001 c
663.70001 12.340001 663.64001 12.480001 663.48004 12.580001 c
662.33002 13.250001 l
662.17004 13.350001 662.04999 13.320001 661.92999 13.170001 c
661.34998 12.430001 660.48999 11.980001 659.42999 11.980001 c
657.64996 11.980001 656.33002 13.260001 656.33002 15.120002 c
656.33002 16.980003 657.65002 18.250002 659.42999 18.250002 c
659.42999 18.25 l
h
699.98999 9.98 m
702.95001 9.98 704.72998 12.25 704.72998 14.869999 c
704.72998 15.609999 704.63995 15.979999 704.07996 15.979999 c
697.08997 15.979999 l
697.31995 17.499998 698.58997 18.48 700.39996 18.48 c
701.44995 18.48 702.17999 18.16 702.84998 17.65 c
703.00995 17.529999 703.13 17.5 703.27997 17.65 c
703.93994 18.309999 l
704.08997 18.459999 704.09991 18.6 703.93994 18.76 c
702.98993 19.710001 701.74994 20.26 700.17993 20.26 c
697.05994 20.26 694.98993 18 694.98993 15.120001 c
694.98993 12.240002 697.05994 9.980001 699.98993 9.980001 c
699.98999 9.98 l
h
700 11.83 m
698.46997 11.83 697.33002 12.83 697.10999 14.42 c
702.82996 14.42 l
702.66998 12.85 701.55994 11.83 699.99994 11.83 c
700 11.83 l
h
741.16998 9.98 m
744.13 9.98 745.90997 12.25 745.90997 14.869999 c
745.90997 15.609999 745.81995 15.979999 745.25995 15.979999 c
738.26996 15.979999 l
738.49994 17.499998 739.76996 18.48 741.57996 18.48 c
742.62994 18.48 743.35999 18.16 744.02997 17.65 c
744.18994 17.529999 744.31 17.5 744.45996 17.65 c
745.11993 18.309999 l
745.26996 18.459999 745.27991 18.6 745.11993 18.76 c
744.16992 19.710001 742.92993 20.26 741.35992 20.26 c
738.23993 20.26 736.16992 18 736.16992 15.120001 c
736.16992 12.240002 738.23993 9.980001 741.16992 9.980001 c
741.16998 9.98 l
h
741.17999 11.83 m
739.64996 11.83 738.51001 12.83 738.28998 14.42 c
744.00995 14.42 l
743.84998 12.85 742.73993 11.83 741.17993 11.83 c
741.17999 11.83 l
h
786.96002 6 m
787.14001 6 787.26001 6.12 787.26001 6.3 c
787.26001 19.700001 l
787.26001 19.880001 787.14001 20 786.96002 20 c
785.55005 20 l
785.37006 20 785.27002 19.879999 785.25006 19.700001 c
785.18005 18.780001 l
784.44006 19.650002 783.37006 20.26 781.91003 20.26 c
779.11005 20.26 777.35004 18.02 777.35004 15.120001 c
777.35004 12.220001 779.06006 9.980001 781.91003 9.980001 c
783.49005 9.980001 784.43005 10.730001 784.91003 11.640001 c
785.10004 11.640001 l
785.10004 6.300001 l
785.10004 6.120001 785.22003 6.000001 785.40002 6.000001 c
786.96002 6.000001 l
786.96002 6 l
h
782.33002 18.280001 m
784.10004 18.280001 785.20001 16.980001 785.20001 15.1 c
785.20001 13.219999 784.10004 11.96 782.33002 11.96 c
780.52002 11.96 779.44 13.22 779.44 15.1 c
779.44 16.98 780.52002 18.280001 782.33002 18.280001 c
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
